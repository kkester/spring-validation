plugins {
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'java'
	id 'maven-publish'
	id 'org.ajoberstar.reckon' version '0.12.0'
}

reckon {
	scopeFromProp()
	snapshotFromProp()
}

group = 'io.pivotal'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.apache.commons:commons-lang3:3.12.0'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

//reckon {
//	// what stages are allowed
//	stages('milestone', 'rc', 'final')
//	// or use snapshots
//	snapshots()
//
//	// how do you calculate the scope/stage
//	stageCalc = calcStageFromProp()
//	// these can also be arbitrary closures (see code for details)
//	scopeCalc = { inventory -> Optional.of(Scope.MAJOR) }
//	stageCalc = { inventory, targetNormal -> Optional.of('beta') }
//}

tasks.named('test') {
	useJUnitPlatform()
}
